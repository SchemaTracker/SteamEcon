// Generated by Xamasoft JSON Class Generator
// http://www.xamasoft.com/json-class-generator

using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using TF2Schema;

namespace SteamEcon.Schema.TF2Schema
{
    public class TF2Schema
    {

        [JsonProperty("status")]
        public int Status { get; set; }

        [JsonProperty("items_game_url")]
        public string ItemsGameUrl { get; set; }

        [JsonProperty("qualities")]
        public Qualities Qualities { get; set; }

        [JsonProperty("qualityNames")]
        public QualityNames QualityNames { get; set; }

        [JsonProperty("originNames")]
        public IList<OriginName> OriginNames { get; set; }

        [JsonProperty("items")]
        public IList<Item> Items { get; set; }

        [JsonProperty("attributes")]
        public IList<TF2SchemaAttribute> Attributes { get; set; }

        [JsonProperty("item_sets")]
        public IList<ItemSetInfo> ItemSets { get; set; }

        [JsonProperty("attribute_controlled_attached_particles")]
        public IList<AttributeControlledAttachedParticle> AttributeControlledAttachedParticles { get; set; }

        [JsonProperty("item_levels")]
        public IList<ItemLevel> ItemLevels { get; set; }

        [JsonProperty("kill_eater_score_types")]
        public IList<KillEaterScoreType> KillEaterScoreTypes { get; set; }

        [JsonProperty("string_lookups")]
        public IList<StringLookup> StringLookups { get; set; }
    }
}

namespace TF2Schema
{
    public class Qualities
    {

        [JsonProperty("Normal")]
        public int Normal { get; set; }

        [JsonProperty("rarity1")]
        public int Rarity1 { get; set; }

        [JsonProperty("rarity2")]
        public int Rarity2 { get; set; }

        [JsonProperty("vintage")]
        public int Vintage { get; set; }

        [JsonProperty("rarity3")]
        public int Rarity3 { get; set; }

        [JsonProperty("rarity4")]
        public int Rarity4 { get; set; }

        [JsonProperty("Unique")]
        public int Unique { get; set; }

        [JsonProperty("community")]
        public int Community { get; set; }

        [JsonProperty("developer")]
        public int Developer { get; set; }

        [JsonProperty("selfmade")]
        public int Selfmade { get; set; }

        [JsonProperty("customized")]
        public int Customized { get; set; }

        [JsonProperty("strange")]
        public int Strange { get; set; }

        [JsonProperty("completed")]
        public int Completed { get; set; }

        [JsonProperty("haunted")]
        public int Haunted { get; set; }

        [JsonProperty("collectors")]
        public int Collectors { get; set; }

        [JsonProperty("paintkitweapon")]
        public int Paintkitweapon { get; set; }
    }
    public class QualityNames
    {

        [JsonProperty("Normal")]
        public string Normal { get; set; }

        [JsonProperty("rarity1")]
        public string Rarity1 { get; set; }

        [JsonProperty("rarity2")]
        public string Rarity2 { get; set; }

        [JsonProperty("vintage")]
        public string Vintage { get; set; }

        [JsonProperty("rarity3")]
        public string Rarity3 { get; set; }

        [JsonProperty("rarity4")]
        public string Rarity4 { get; set; }

        [JsonProperty("Unique")]
        public string Unique { get; set; }

        [JsonProperty("community")]
        public string Community { get; set; }

        [JsonProperty("developer")]
        public string Developer { get; set; }

        [JsonProperty("selfmade")]
        public string Selfmade { get; set; }

        [JsonProperty("customized")]
        public string Customized { get; set; }

        [JsonProperty("strange")]
        public string Strange { get; set; }

        [JsonProperty("completed")]
        public string Completed { get; set; }

        [JsonProperty("haunted")]
        public string Haunted { get; set; }

        [JsonProperty("collectors")]
        public string Collectors { get; set; }

        [JsonProperty("paintkitweapon")]
        public string Paintkitweapon { get; set; }
    }
    public class OriginName
    {

        [JsonProperty("origin")]
        public int Origin { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }
    public class Item
    {

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("defindex")]
        public int Defindex { get; set; }

        [JsonProperty("item_class")]
        public string ItemClass { get; set; }

        [JsonProperty("item_type_name")]
        public string ItemTypeName { get; set; }

        [JsonProperty("item_name")]
        public string ItemName { get; set; }

        [JsonProperty("proper_name")]
        public bool ProperName { get; set; }

        [JsonProperty("item_slot")]
        public string ItemSlot { get; set; }

        [JsonProperty("model_player")]
        public string ModelPlayer { get; set; }

        [JsonProperty("item_quality")]
        public int ItemQuality { get; set; }

        [JsonProperty("image_inventory")]
        public string ImageInventory { get; set; }

        [JsonProperty("min_ilevel")]
        public int MinIlevel { get; set; }

        [JsonProperty("max_ilevel")]
        public int MaxIlevel { get; set; }

        [JsonProperty("image_url")]
        public string ImageUrl { get; set; }

        [JsonProperty("image_url_large")]
        public string ImageUrlLarge { get; set; }

        [JsonProperty("craft_class")]
        public string CraftClass { get; set; }

        [JsonProperty("craft_material_type")]
        public string CraftMaterialType { get; set; }

        [JsonProperty("capabilities")]
        public Capabilities Capabilities { get; set; }

        [JsonProperty("used_by_classes")]
        public IList<string> UsedByClasses { get; set; }

        [JsonProperty("item_description")]
        public string ItemDescription { get; set; }

        [JsonProperty("styles")]
        public IList<Style> Styles { get; set; }

        [JsonProperty("attributes")]
        public IList<Attribute> Attributes { get; set; }

        [JsonProperty("drop_type")]
        public string DropType { get; set; }

        [JsonProperty("item_set")]
        public string ItemSet { get; set; }

        [JsonProperty("holiday_restriction")]
        public string HolidayRestriction { get; set; }

        [JsonProperty("per_class_loadout_slots")]
        public PerClassLoadoutSlots PerClassLoadoutSlots { get; set; }

        [JsonProperty("tool")]
        public Tool Tool { get; set; }
    }
    public class Capabilities
    {

        [JsonProperty("nameable")]
        public bool Nameable { get; set; }

        [JsonProperty("can_craft_mark")]
        public bool CanCraftMark { get; set; }

        [JsonProperty("can_be_restored")]
        public bool CanBeRestored { get; set; }

        [JsonProperty("strange_parts")]
        public bool StrangeParts { get; set; }

        [JsonProperty("can_card_upgrade")]
        public bool CanCardUpgrade { get; set; }

        [JsonProperty("can_strangify")]
        public bool CanStrangify { get; set; }

        [JsonProperty("can_killstreakify")]
        public bool CanKillstreakify { get; set; }

        [JsonProperty("can_consume")]
        public bool CanConsume { get; set; }

        [JsonProperty("can_gift_wrap")]
        public bool? CanGiftWrap { get; set; }

        [JsonProperty("can_collect")]
        public bool? CanCollect { get; set; }

        [JsonProperty("paintable")]
        public bool? Paintable { get; set; }

        [JsonProperty("can_craft_if_purchased")]
        public bool? CanCraftIfPurchased { get; set; }

        [JsonProperty("can_craft_count")]
        public bool? CanCraftCount { get; set; }

        [JsonProperty("usable_gc")]
        public bool? UsableGc { get; set; }

        [JsonProperty("usable")]
        public bool? Usable { get; set; }

        [JsonProperty("can_customize_texture")]
        public bool? CanCustomizeTexture { get; set; }

        [JsonProperty("usable_out_of_game")]
        public bool? UsableOutOfGame { get; set; }

        [JsonProperty("can_spell_page")]
        public bool? CanSpellPage { get; set; }

        [JsonProperty("duck_upgradable")]
        public bool? DuckUpgradable { get; set; }

        [JsonProperty("decodable")]
        public bool? Decodable { get; set; }
    }
    public class Style
    {

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("additional_hidden_bodygroups")]
        public AdditionalHiddenBodygroups AdditionalHiddenBodygroups { get; set; }
    }
    public class AdditionalHiddenBodygroups
    {

        [JsonProperty("hat")]
        public int Hat { get; set; }

        [JsonProperty("headphones")]
        public int Headphones { get; set; }

        [JsonProperty("head")]
        public int? Head { get; set; }
    }
    public class Attribute
    {

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("class")]
        public string Class { get; set; }

        [JsonProperty("value")]
        public double Value { get; set; }
    }
    public class PerClassLoadoutSlots
    {

        [JsonProperty("Soldier")]
        public string Soldier { get; set; }

        [JsonProperty("Heavy")]
        public string Heavy { get; set; }

        [JsonProperty("Pyro")]
        public string Pyro { get; set; }

        [JsonProperty("Engineer")]
        public string Engineer { get; set; }

        [JsonProperty("Demoman")]
        public string Demoman { get; set; }
    }
    public class Tool
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("usage_capabilities")]
        public UsageCapabilities UsageCapabilities { get; set; }

        [JsonProperty("use_string")]
        public string UseString { get; set; }

        [JsonProperty("restriction")]
        public string Restriction { get; set; }
    }
    public class UsageCapabilities
    {

        [JsonProperty("nameable")]
        public bool Nameable { get; set; }

        [JsonProperty("decodable")]
        public bool? Decodable { get; set; }

        [JsonProperty("paintable")]
        public bool? Paintable { get; set; }

        [JsonProperty("can_customize_texture")]
        public bool? CanCustomizeTexture { get; set; }

        [JsonProperty("can_gift_wrap")]
        public bool? CanGiftWrap { get; set; }

        [JsonProperty("paintable_team_colors")]
        public bool? PaintableTeamColors { get; set; }

        [JsonProperty("can_strangify")]
        public bool? CanStrangify { get; set; }

        [JsonProperty("can_killstreakify")]
        public bool? CanKillstreakify { get; set; }

        [JsonProperty("duck_upgradable")]
        public bool? DuckUpgradable { get; set; }

        [JsonProperty("strange_parts")]
        public bool? StrangeParts { get; set; }

        [JsonProperty("can_card_upgrade")]
        public bool? CanCardUpgrade { get; set; }

        [JsonProperty("can_spell_page")]
        public bool? CanSpellPage { get; set; }

        [JsonProperty("can_consume")]
        public bool? CanConsume { get; set; }
    }
    public class TF2SchemaAttribute
    {

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("defindex")]
        public int Defindex { get; set; }

        [JsonProperty("attribute_class")]
        public string AttributeClass { get; set; }

        [JsonProperty("description_string")]
        public string DescriptionString { get; set; }

        [JsonProperty("description_format")]
        public string DescriptionFormat { get; set; }

        [JsonProperty("effect_type")]
        public string EffectType { get; set; }

        [JsonProperty("hidden")]
        public bool Hidden { get; set; }

        [JsonProperty("stored_as_integer")]
        public bool StoredAsInteger { get; set; }
    }
    public class ItemSetInfo
    {

        [JsonProperty("item_set")]
        public string ItemSet { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("items")]
        public IList<string> Items { get; set; }

        [JsonProperty("attributes")]
        public IList<ItemSetInfoAttribute> Attributes { get; set; }

        [JsonProperty("store_bundle")]
        public string StoreBundle { get; set; }
    }
    public class ItemSetInfoAttribute
    {

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("class")]
        public string Class { get; set; }

        [JsonProperty("value")]
        public double Value { get; set; }
    }
    public class AttributeControlledAttachedParticle
    {

        [JsonProperty("system")]
        public string System { get; set; }

        [JsonProperty("id")]
        public int Id { get; set; }

        [JsonProperty("attach_to_rootbone")]
        public bool AttachToRootbone { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("attachment")]
        public string Attachment { get; set; }
    }
    public class ItemLevel
    {

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("levels")]
        public IList<LevelInfo> Levels { get; set; }
    }
    public class LevelInfo
    {

        [JsonProperty("level")]
        public int Level { get; set; }

        [JsonProperty("required_score")]
        public int RequiredScore { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }
    public class KillEaterScoreType
    {

        [JsonProperty("type")]
        public int Type { get; set; }

        [JsonProperty("type_name")]
        public string TypeName { get; set; }

        [JsonProperty("level_data")]
        public string LevelData { get; set; }
    }
    public class StringLookup
    {

        [JsonProperty("table_name")]
        public string TableName { get; set; }

        [JsonProperty("strings")]
        public IList<StringInfo> Strings { get; set; }
    }
    public class StringInfo
    {

        [JsonProperty("index")]
        public int Index { get; set; }

        [JsonProperty("string")]
        public string String { get; set; }
    }
}
